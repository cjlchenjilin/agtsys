<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.agtsys.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="org.agtsys.domain.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="roleName" property="rolename" jdbcType="VARCHAR" />
    <result column="creationTime" property="creationtime" jdbcType="TIMESTAMP" />
    <result column="createdBy" property="createdby" jdbcType="VARCHAR" />
    <result column="lastUpdateTime" property="lastupdatetime" jdbcType="TIMESTAMP" />
    <result column="isStart" property="isstart" jdbcType="INTEGER" />
  </resultMap>

  <select id="getAllRoles" resultType="Role">
    select * from as_role
  </select>
   <select id="getTotalCount" resultType="int">
  	select count(1) from as_role
  </select>
  <select id="getPagedRoles" parameterType="org.agtsys.util.PageTool" resultType="Role">
  	select * from as_role limit #{begin},#{size}
  </select>
  <select id="getRoleByRole" parameterType="Role" resultType="Role">
  	select * from as_role 
  	<where>
  		<if test="id != null"> id = #{id}</if>
  		<if test="rolename != null">and roleName = #{rolename}</if>
  	</where>
  </select>
  <insert id="addRole" parameterType="Role">
  	insert into as_role(as_role.roleName,as_role.creationTime,as_role.createdBy,
	as_role.lastUpdateTime,as_role.isStart) values
	(#{rolename},#{creationtime},#{createdby},#{lastupdatetime},#{isstart})
  </insert>
  <update id="updateRole" parameterType="Role">
  	update as_role 
  	<set>
  		<if test="rolename != null"> roleName = #{rolename},</if>
		<if test="creationtime != null"> creationTime = #{creationtime},</if>
		<if test="createdby != null"> createdBy = #{createdby}, </if>
		<if test="lastupdatetime != null"> lastUpdateTime = #{lastupdatetime},</if>
		<if test="isstart != null"> isStart = #{isstart}</if>
  	</set>
	where id = #{id}
  </update>
  <delete id="deleteRole" parameterType="Role">
  	delete from as_role where id = #{id}
  </delete>
</mapper>